@model HomeWork3.Models.UserViewModel

@{
    ViewBag.Title = "Add";
}
<script type="text/javascript" language="javascript">
    function onIsActiveChange() {
        var elem = document.getElementById("BlockDescription");
        elem.disabled = !elem.disabled;
        if (elem.disabled) {
            elem.value = "";
        }
    }
</script>

<h2>Add new User</h2>

    @using (Html.BeginForm("Add", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>User</h4>
            <hr />
            @Html.ValidationSummary()

            <div class="form-group">
                @Html.LabelFor(model => model.Login, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Login)
                    @Html.ValidationMessageFor(model => model.Login)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Role, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Role, new List<SelectListItem>()
              {new SelectListItem() {Text = "Admin",Value = "Admin"},
              new SelectListItem() {Text = "User",Value = "User"} })
                    @Html.ValidationMessageFor(model => model.Role)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Phone, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Phone)
                    @Html.ValidationMessageFor(model => model.Phone)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Password)
                    @Html.ValidationMessageFor(model => model.Password)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.FirstName)
                    @Html.ValidationMessageFor(model => model.FirstName)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.LastName)
                    @Html.ValidationMessageFor(model => model.LastName)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsActive, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.CheckBoxFor(model => model.IsActive, new { @checked = "checked", @onclick = "onIsActiveChange()" })
                    @Html.ValidationMessageFor(model => model.IsActive)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Email)
                    @Html.ValidationMessageFor(model => model.Email)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmedEmail, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.ConfirmedEmail)
                    @Html.ValidationMessageFor(model => model.ConfirmedEmail)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BlockDescription, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.BlockDescription, new {@disabled = true })
                    @Html.ValidationMessageFor(model => model.BlockDescription)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BirthDay, new { @class = "control-label col-md-2" })
                @Html.DropDownListFor(model => model.BirthDay.Day, Enumerable.Range(1, 31).Select(i => new SelectListItem { Value = i.ToString(), Text = i.ToString() }), "--Day--")
                @Html.DropDownListFor(model => model.BirthDay.Month, Enumerable.Range(1, 12).Select(i => new SelectListItem { Value = i.ToString(), Text = i.ToString() }), "--Month--")
                @Html.DropDownListFor(model => model.BirthDay.Year, Enumerable.Range(DateTime.Now.Year - 120, 121).Select(i => new SelectListItem { Value = i.ToString(), Text = i.ToString() }), "--Year--")
                @Html.ValidationMessageFor(model => model.BirthDay)
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Image, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Image, new {@type = "file"})
                    @Html.ValidationMessageFor(model => model.Image)
                    @*@Html.DropDownList("ImageID", String.Empty)*@
                    @*@Html.ValidationMessageFor(model => model.ImageID)*@
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
}

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }

